# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build:
    runs-on: self-hosted
    name: respati-vps

    env:
      GOPATH: ${{ github.workspace }}/go
      GOCACHE: ${{ github.workspace }}/.cache/go-build
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.5'
    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Set environment variables
      run: echo "${{ secrets.ENV }}" >> .env

    - name: Install dependencies
      run: go mod download

    # - name: Build
    #   run: go build -v ./...

    # # - name: Test
    # #   run: go test -v ./...
    # - name: Build binary
    #   run: go build -o myapp ./cmd/money/main.go

    # - name: Build Docker image
    #   run: docker build -t myapp:latest -f ./build/Dockerfile .

    # - name: Log in to Docker Hub
    #   run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # - name: Tag Docker image
    #   run: docker tag myapp:latest respatitri12/myapp:latest

    # - name: Push Docker image to Docker Hub
    #   run: docker push respatitri12/myapp:latest


    - name: Install Docker Compose
      run: sudo apt-get install docker-compose -y
    
    - name: Deploy to Server 
      run: |
          docker-compose -f deployments/docker-compose.yaml up -d
        